/**
 * Created by jennifer on 7/23/15.
 */
var GrapesCommons = {
    isAdmin: false,
    getRestResources: function (url, callback) {

        return $.getJSON(url)
            .done(function (jsonData) {
                console.log("from get resource the done method has been called calling call back now");
                callback(jsonData);
            })
            .fail(function (jsonData) {
                this.stuffFailed(jsonData);
                console.log("we failed to retrieve the resource should have a call back method for failures" + url);
            })
            .always(function () {

            });
    },

    deleteRestResource: function (url, callback, misc) {
        console.log("inside remove orgname is ", misc);
        $.ajax({
            url: url,
            type: 'DELETE'
        })
            .done(function (result) {
                console.log("iside complete organme should be the same ", misc);
                callback(result, misc);
                $("#error-msg").html("").removeClass("alert-success").removeClass("alert-danger").removeClass("alert-warning");
                //   load();
            })
            .fail(function (result) {
                console.log("Failed to delete", result.responseText);
            });
    },
    postRestResource: function (url, data, callback) {
        $.ajax({
            url: url,
            method: 'POST',
            contentType: 'application/json',
            data: data,
            error: function (xhr, error) {
                alert("The action cannot be performed: status " + xhr.status);
            }
        }).done(function () {
            callback();
            console.log("made it to done we need a fail and always?")
        })
            .fail(function (result) {
                //do stuff
            });
    },
    stuffFailed: function (jsonData) {
        console.log("FAILED: " + jsonData.responseText + " " + jsonData.status + " " + jsonData.statusText);
    },

    stringtoarray: function (string) {
        //todo alphabetise
        var arrays = string.replace(/ /g, '').split(",");

        return '"' + arrays.join('","') + '"';


    },


    load: function () {
        console.log("need to reload page");
        location.reload();
    },
    loginHandler: function () {
        var userName = $('#loginDetails').find('input[name="loginUserName"]').val();
        var password = $('#loginDetails').find('input[name="loginUserPassword"]').val();

        $.ajax({
            url: "/authenticate",
            method: 'POST',
            beforeSend: function (xhr) {
                xhr.setRequestHeader("Authorization", "Basic " + btoa(userName + ":" + password));
            }

        }).done(function () {
            //todo when we log in we need to get the current page location and info so we can do a refresh
            //we might need a case statement? pages are generated by ajax
            console.log("done?");
            $("#loginModel").modal('hide');
            $('#loginDetails').find('input[name="loginUserName"]').val('');
            GrapesCommons.isAdmin = true;
            //when we refresh the page it reset to false it serves no purpose to put it here. we need to check the seesion at each reload.


            // close the login window find a way to refresh the nav bar?
        }).fail(function () {
            //add a eerro msg to the modal
            $('#loginDetails').find('input[name="loginUserName"]').val('');

            $("#loginModalInfo").text("Unable to authenticate. Please try again or cancel.").addClass("alert-danger");
            console.log("login failed?");
        });
    },
    getIsAdmin: function () {
        console.log("grapes admin is currently returning "+GrapesCommons.isAdmin);
        return GrapesCommons.isAdmin
    },
    setIsAdmin: function () {//todo check the session variable
        var ia = $("#isAdmin").attr("value");
        console.log(" settting isadmin ia is:" + ia);
        if (ia === "" || ia.length === 0) {
            console.log("setting it to false");
            GrapesCommons.isAdmin = false;
        }
        else {
            console.log("setting it to true");
            GrapesCommons.isAdmin = true;
        }
    },
    jq2: function (myid){
        return myid.replace(/([:]|[.])/g,'');
    },
    jq: function( myid ) {

    return "#" + myid.replace( /(:|\.|\[|\]|,)/g, "\\$1" );

}

}

$(document).ready(function () {
    $('#loginLoginBtn').click(GrapesCommons.loginHandler);
});
