#!/bin/sh

# Read config file
if [ -r "/etc/sysconfig/@@SKEL_APP@@" ]; then
    . /etc/sysconfig/@@SKEL_APP@@
fi

start() {
	
	# Check the APP_PID file
	if [ ! -z "$APP_PID" ]; then
		if [ -f "$APP_PID" ]; then
	     	if [ -s "$APP_PID" ]; then
        	echo "Existing PID file found during start."
	        	if [ -r "$APP_PID" ]; then
	          		PID=`cat "$APP_PID"`
          	  		ps -p $PID >/dev/null 2>&1
	          		if [ $? -eq 0 ] ; then
	            		echo "Grapes appears to still be running with PID $PID. Start aborted."
	            		exit 1
	          		else
	            		echo "Removing/clearing stale PID file."
	            		rm -f "$APP_PID" >/dev/null 2>&1
	            		if [ $? != 0 ]; then
	              			if [ -w "$APP_PID" ]; then
	                			cat /dev/null > "$APP_PID"
	              			else
	                			echo "Unable to remove or clear stale PID file. Start aborted."
	                			exit 1
	              			fi
	            		fi
	          		fi
				fi
    		fi
    	fi
	fi
	
	# Create Run/Temp dir if not existing
  if [ ! -d @@SKEL_TMPDIR@@ ]; then
    mkdir -p @@SKEL_TMPDIR@@
  fi

	# Start service, APP_HTTP_HOST define interfaces where it will listen
	java $APP_JAVA_OPTS -jar $APP_HOME/lib/server.jar server $APP_HOME/conf/server-conf.yml >> @@SKEL_LOGDIR@@/server.log 2>&1 &

	# Set the running applicationPID into the app_PID file
	if [ ! -z "$APP_PID" ]; then
    	echo $! > $APP_PID
	fi
	
}

stop() {
	
	# Check the APP_PID file
	if [ ! -z "$APP_PID" ]; then
		if [ -f "$APP_PID" ]; then
	     	if [ -s "$APP_PID" ]; then
        		echo "Existing PID file found."
	        	if [ -r "$APP_PID" ]; then
	          		PID=`cat "$APP_PID"`
          	  		ps -p $PID >/dev/null 2>&1
          	  
          	 		# Stopping the program
	          		if [ $? -eq 0 ] ; then
	            		kill -9 $PID
	            		echo "Program has been shutdown."
	          		else
	          			echo "No running process is running with PID $PID. Stop aborted."
	          		fi
	          
	          		# Removing the PID file
	          		rm -f "$APP_PID" >/dev/null 2>&1
	          		if [ $? != 0 ]; then
	            		if [ -w "$APP_PID" ]; then
	              			cat /dev/null > "$APP_PID"
	            		else
	              			echo "Unable to remove or clear stale PID file. Stop aborted."
	              			exit 1
	            		fi
	          		fi
	          	fi
          		echo "PID file deleted."
        	else
        		echo "$APP_PID is empty, kill the program manually if it is truly started."
			fi
		else
			echo "$APP_PID file not found, the program seems not to be started."
   		fi
   	else
   		echo "No APP_PID variable define, please use services commands to run the program."
	fi
	
}

status() {
	echo "not yet"
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status
        RETVAL=$?
        ;;
  restart|force-reload|reload)
        stop
        start
        ;;
  version)
        echo "${prog} @@SKEL_VERSION@@"
        ;;
  *)
        echo $"Usage: $prog {start|stop|restart|force-reload|reload|status|version}"
        RETVAL=2
esac
